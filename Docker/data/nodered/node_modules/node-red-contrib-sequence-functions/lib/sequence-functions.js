'use strict';

function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    'default': e
  };
}

function _classCallCheck(e, t) {
  if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
}

Object.defineProperty(exports, '__esModule', {
  value: !0
});

var _exprEval = require('expr-eval'),
    _simpleStatistics = require('simple-statistics'),
    _simpleStatistics2 = _interopRequireDefault(_simpleStatistics);

exports.default = function (t) {
  var r = function e(r) {
    function n() {
      return c.eventSequence.length > 0;
    }

    function i(e) {
      return 'clear' in e || 'clear' === e.topic;
    }

    function a(e) {
      return 'capture' in e || 'capture' === e.topic;
    }

    function o(e) {
      if (undefined !== e.payload && !a(e)) for (e._ts = Date.now(), c.eventSequence.push(e); c.eventSequence.length > c.size;) c.eventSequence.shift();
    }

    function u() {
      var e = c.eventSequence.slice();
      return e.map(function (e) {
        return {
          topic: e.topic,
          payload: e.payload
        };
      });
    }

    var s = this;
    _classCallCheck(this, e), t.nodes.createNode(this, r), this.name = r.name, this.size = r.size || 10, this.period = r.period || 30, this.interval = r.interval, this.onNewMessage = r.onNewMessage, this.eventSequence = [];
    var c = this;
    this.on('input', function (e) {
      return i(e) ? void (c.eventSequence = []) : (o(e), void ((s.onNewMessage || a(e)) && s.send({
        topic: e.topic,
        payload: u()
      })));
    }), this.testInterval = setInterval(function () {
      var e = Date.now() - 1000 * s.period;
      s.eventSequence = s.eventSequence.filter(function (t) {
        return t._ts > e;
      });
    }, 1000 * this.period), this.interval && parseInt(this.interval) >= 1 && (this.triggerInterval = setInterval(function () {
      n() && s.send({
        payload: u()
      });
    }, 1000 * this.interval)), this.on('close', function () {
      clearInterval(s.testInterval), clearInterval(s.triggerInterval), delete s.eventSequence;
    });
  };

  t.nodes.registerType('capture', r);

  var n = function e(r) {
    function n(e) {
      var r = e.payload;
      return r.map(function (e) {
        var r = e;
        return a.readFromProperty && (r = t.util.getMessageProperty(e, a.valueProperty)), a.mapFunction(r);
      });
    }

    var i = this;
    _classCallCheck(this, e), t.nodes.createNode(this, r), this.name = r.name, this.topic = r.topic, this.valueProperty = r.valueProperty || 'payload', this.readFromProperty = r.readFromProperty, this.mapToString = r.mapToString, r.mapFunctionExpr && (this.parsedMapFunction = _exprEval.Parser.parse(r.mapFunctionExpr), this.mapFunction = function (e) {
      try {
        var r = i.parsedMapFunction.evaluate({
          x: e
        });
        return i.mapToString ? String(r) : r;
      } catch (e) {
        return t.log.error(t._('sequence-functions.errors.parserError', {
          error: e
        })), null;
      }
    }), this.mapFunction || (this.mapFunction = function (e) {
      return i.mapToString ? String(e) : e;
    });
    var a = this;
    this.on('input', function (e) {
      if (e.payload) {
        Array.isArray(e.payload) || (e.payload = [e.payload]);
        var t = n(e);
        t && i.send({
          topic: i.topic || e.topic,
          payload: t
        });
      }
    });
  };

  t.nodes.registerType('map', n);

  var i = function e(r) {
    function n(e) {
      var t = e.payload;
      return t.length && 0 !== t.length ? a.arrayReduce.call(t, function (e, t) {
        return a.reduceFunction(e, t);
      }) : null;
    }

    var i = this;

    if ((_classCallCheck(this, e), t.nodes.createNode(this, r), this.name = r.name, this.topic = r.topic, this.reduceRight = r.reduceRight, r.reduceFunctionExpr)) {
      this.parsedReduceFunction = _exprEval.Parser.parse(r.reduceFunctionExpr);

      try {
        this.parsedReduceFunction.evaluate({
          a: 0,
          x: 0
        }), this.reduceFunction = function (e, t) {
          return i.parsedReduceFunction.evaluate({
            a: e,
            x: t
          });
        };
      } catch (e) {
        t.log.error(t._('sequence-functions.errors.parserError', {
          error: e
        }));
      }
    }

    this.reduceFunction || (this.reduceFunction = function (e, t) {
      return t;
    }), this.arrayReduce = this.reduceRight ? [].reduceRight : [].reduce;
    var a = this;
    this.on('input', function (e) {
      if (e.payload) {
        Array.isArray(e.payload) || (e.payload = [e.payload]);
        var t = n(e);
        i.send({
          topic: i.topic || e.topic,
          payload: t
        });
      }
    });
  };

  t.nodes.registerType('reduce', i);

  var a = function r(n) {
    function i(e, t) {
      for (var r = !0, n = 0; n < c.rules.length; n += 1) {
        var i,
            a,
            u = c.rules[n],
            s = e;
        if ((i = t(u.v, u.vt), a = u.v2, 'undefined' != typeof a && (a = t(u.v2, u.v2t)), 'else' == u.t && (s = r, r = !0), !o[u.t](s, i, a, u.case))) return !1;
        if ((r = !1, 'false' === c.checkall)) return !0;
      }

      return !0;
    }

    var a = this;
    _classCallCheck(this, r), t.nodes.createNode(this, n), this.name = n.name, this.topic = n.topic, this.rules = n.rules || [], this.checkall = n.checkall || 'true';

    for (var o = {
      eq: function (e, t) {
        return e == t;
      },
      neq: function (e, t) {
        return e != t;
      },
      lt: function (e, t) {
        return e < t;
      },
      lte: function (e, t) {
        return e <= t;
      },
      gt: function (e, t) {
        return e > t;
      },
      gte: function (e, t) {
        return e >= t;
      },
      btwn: function (e, t, r) {
        return e >= t && e <= r;
      },
      cont: function (e, t) {
        return (e + '').indexOf(t) != -1;
      },
      regex: function (e, t, r, n) {
        return (e + '').match(new RegExp(t, n ? 'i' : ''));
      },
      'true': function (e) {
        return e === !0;
      },
      'false': function (e) {
        return e === !1;
      },
      'null': function (e) {
        return 'undefined' == typeof e || null === e;
      },
      nnull: function (e) {
        return 'undefined' != typeof e && null !== e;
      },
      'else': function (e) {
        return e === !0;
      }
    }, u = 0; u < this.rules.length; u += 1) {
      var s = this.rules[u];
      s.vt || (isNaN(Number(s.v)) ? s.vt = 'str' : s.vt = 'num'), 'num' === s.vt && (isNaN(Number(s.v)) || (s.v = Number(s.v))), 'undefined' != typeof s.v2 && (s.v2t || (isNaN(Number(s.v2)) ? s.v2t = 'str' : s.v2t = 'num'), 'num' === s.v2t && (s.v2 = Number(s.v2)));
    }

    var c = this;
    this.on('input', function (r) {
      if (r.payload) {
        Array.isArray(r.payload) || (r.payload = [r.payload]);

        try {
          !(function () {
            var e = function (e, n) {
              return t.util.evaluateNodeProperty(e, n, c, r);
            },
                n = r.payload.filter(function (t) {
              return i(t, e);
            });

            a.send({
              topic: a.topic || r.topic,
              payload: n
            });
          })();
        } catch (r) {
          t.log.error(t._('sequence-functions.errors.parserError', {
            error: e
          }));
        }
      }
    });
  };

  t.nodes.registerType('filter', a);

  var o = function e(r) {
    var n = this;
    _classCallCheck(this, e), t.nodes.createNode(this, r), this.name = r.name, this.topic = r.topic, this.statsFunction = r.statsFunction, this.on('input', function (e) {
      if (e.payload) {
        Array.isArray(e.payload) || (e.payload = [e.payload]);

        var t = _simpleStatistics2.default[n.statsFunction](e.payload);

        n.send({
          topic: n.topic || e.topic,
          payload: t
        });
      }
    });
  };

  t.nodes.registerType('stats', o);
}, module.exports = exports.default;
//# sourceMappingURL=sequence-functions.js.map
